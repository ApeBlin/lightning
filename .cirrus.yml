---
task:
  clone_script: |
    if [ -z "$CIRRUS_PR" ]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
  container:
    dockerfile: contrib/Dockerfile.builder
    cpu: 4
    memory: 8G
  env:
    matrix:
      - {ARCH: 64, TEST_CMD: "make", NO_PYTHON: 1}
      - {ARCH: 64, TEST_CMD: "make check-source check-units installcheck", COPTFLAGS: "-O3"}
      - {ARCH: 32, TEST_CMD: "make check-source check-units installcheck", DEVELOPER: 0}
      - {ARCH: 64, TEST_CMD: "make check-source check-units installcheck", DEVELOPER: 1, EXPERIMENTAL_FEATURES: 1}

      # All of the following will just run `make pytest`
      - {VALGRIND: 0, ARCH: 64, DEVELOPER: 1, COMPILER: clang}
      - {VALGRIND: 0, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_CHECK_DBSTMTS: 1}
      - {VALGRIND: 0, ARCH: 64, DEVELOPER: 0, COMPILER: gcc, COMPAT: 0, TEST_GROUP: 1, TEST_GROUP_COUNT: 2}
      - {VALGRIND: 0, ARCH: 64, DEVELOPER: 0, COMPILER: gcc, COMPAT: 0, TEST_GROUP: 2, TEST_GROUP_COUNT: 2}

      ## All of these are pretty slow since they run under valgrind
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 1, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 2, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 3, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 4, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 5, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 6, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 7, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 8, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 9, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 10, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}
      - {VALGRIND: 1, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, TEST_GROUP: 11, TEST_GROUP_COUNT: 11, PYTEST_PAR: 2}

      # Various other configurations
      - {VALGRIND: 0, ARCH: 64, DEVELOPER: 1, NETWORK: liquid-regtest}
      - {VALGRIND: 0, ARCH: 64, DEVELOPER: 1, DB: postgres}
      - {VALGRIND: 0, ARCH: arm32v7, DEVELOPER: 1, TARGET_HOST: arm-linux-gnueabihf}
      - {VALGRIND: 0, ARCH: arm64v8, DEVELOPER: 1, TARGET_HOST: aarch64-linux-gnu}
      - {VALGRIND: 0, ARCH: 64, DEVELOPER: 1, COMPILER: gcc, EXPERIMENTAL_FEATURES: 1}

  tests_script: |
    export SLOW_MACHINE=1
    export CC=${COMPILER:-gcc}
    export DEVELOPER=${DEVELOPER:-1}
    export EXPERIMENTAL_FEATURES=${EXPERIMENTAL_FEATURES:-0}
    export COMPAT=${COMPAT:-1}
    export PATH=$CWD/dependencies/bin:"$HOME"/.local/bin:"$PATH"
    export PYTEST_PAR=${PYTEST_PAR:-10}
    export PYTEST_SENTRY_ALWAYS_REPORT=1
    export BOLTDIR=lightning-rfc
    export TEST_DB_PROVIDER=${DB:-"sqlite3"}
    export TEST_NETWORK=${NETWORK:-"regtest"}
    export PYTEST_OPTS="--reruns=2 --maxfail=5 ${PYTEST_OPTS}"
    export TIMEOUT=300

    export TEST_CMD=${TEST_CMD:-"make -j $PYTEST_PAR pytest"}
    pip3 install --user -U --progress-bar off \
      pytest-test-groups==1.0.3

    pip3 install --user -U --progress-bar off \
      -r requirements.txt \
      -r contrib/pyln-client/requirements.txt \
      -r contrib/pyln-proto/requirements.txt \
      -r contrib/pyln-testing/requirements.txt

    # Install utilities that aren't dependencies, but make running
    # tests easier/feasible on CI
    pip3 install --user \
      blinker \
      pytest-sentry \
      pytest-rerunfailures==9.1

    git clone https://github.com/lightningnetwork/lightning-rfc.git ../lightning-rfc

    git submodule init
    git submodule update
    (cd external/libwally-core/src/; git submodule init; git submodule update)
    git clone https://github.com/lightningnetwork/lightning-rfc.git

    ./configure CC="$CC"
    cat config.vars

    make -j32    
    $TEST_CMD
